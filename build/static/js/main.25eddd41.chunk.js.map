{"version":3,"sources":["components/Player/index.js","config/index.js","components/Form/index.js","components/Header/index.js","App.js","serviceWorker.js","index.js"],"names":["Tree","DirectoryTree","Player","props","useState","clicked","setSelected","sendSelected","data","getSelected","hideHand","document","getElementById","style","useEffect","addEventListener","window","threekitPlayer","authToken","el","assetId","stageId","initialConfiguration","initialConfig","showConfigurator","showAR","then","api","a","player","getConfigurator","configurator","when","arr","allOptions","scene","getAll","key","obj","title","name","id","isLeaf","includes","push","parentCallback","findClickable","node","get","sceneId","i","plugs","Properties","length","value","parent","tools","addTool","label","active","enabled","handlers","click","ev","hits","hitNodes","nodeId","newNodeId","scopeNode","selectable","plug","property","selectionSet","set","nodeInfo","clear","className","height","width","src","mobile","config","swatches","exterior","wheels","Option","Tabs","TabPane","Select","Form","make","setMake","model","setModel","carYear","setCarYear","menu","setMenu","setActive","menuLoading","setMenuLoading","selected","expanded","setExpanded","loadingMenuObject","handleDropdown","e","info","console","log","year","menuData","children","handleExpand","pop","Promise","resolve","reject","unload","successMessage","isMobile","placeholder","onChange","onSelect","toggle","defaultExpandedKeys","onExpand","expandedKeys","selectedKeys","treeData","Header","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.25eddd41.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport { Tree, Input } from \"antd\";\nconst { DirectoryTree } = Tree;\n\nfunction Player(props) {\n  let [clicked, setClicked] = useState(false);\n\n  let [selected, setSelected] = useState(\"\");\n\n  const sendData = (data) => {\n    props.parentCallback(data);\n  };\n\n  const sendSelected = (data) => {\n    props.getSelected(data);\n  };\n\n  const hideHand = () => {\n    // document.getElementById(\"hand-indicator\") == undefined\n    //   ? window.location.reload()\n    document.getElementById(\"hand-indicator\").style = \"display: none\";\n  };\n\n  useEffect(() => {\n    if (clicked == false) {\n      document\n        .getElementById(\"threekit-container\")\n        .addEventListener(\"mousedown\", function () {\n          // document.getElementById(\"hand-container\").remove();\n          hideHand();\n        });\n\n      document\n        .getElementById(\"threekit-container\")\n        .addEventListener(\"touchstart\", function () {\n          // document.getElementById(\"hand-container\").remove();\n          hideHand();\n        });\n    }\n\n    window\n      .threekitPlayer({\n        authToken: props.authToken,\n        el: document.getElementById(\"player-\" + props.assetId),\n        stageId: props.stageId,\n        assetId: props.assetId,\n\n        initialConfiguration: props.initialConfig,\n        showConfigurator: props.showConfigurator,\n        showAR: props.showAR,\n      })\n      .then(async (api) => {\n        window.player = api;\n        window.configurator = await api.getConfigurator();\n\n        await api.when(\"loaded\");\n        let arr = [];\n        let allOptions = api.scene.getAll();\n        for (const key in allOptions) {\n          let obj = {\n            title: allOptions[key].name,\n            key: allOptions[key].id,\n            isLeaf: true,\n          };\n          if (allOptions[key].name.includes(\"_\")) {\n            continue;\n          }\n          arr.push(obj);\n        }\n        sendData(arr);\n\n        // Selection Code\n        /****************************************************\n         Apply Selection\n        ****************************************************/\n\n        // Custom Select tool to pass some info\n        const findClickable = (id) => {\n          var node = window.player.scene.get({ id: id });\n          //if it's the scene you've reached the end. return it\n          if (node.sceneId === node.id) {\n            return node.id;\n          }\n          //if MetaData selectable_part true return it\n          for (var i = 0; i < node.plugs.Properties.length; i++) {\n            if (\n              node.plugs.Properties[i].name === \"MetaData\" &&\n              node.plugs.Properties[i].key === \"selectable_part\" &&\n              node.plugs.Properties[i].value === \"true\"\n            ) {\n              return node.id;\n            }\n          }\n          //else run the parent\n          return findClickable(node.parent);\n        };\n        window.player.tools.addTool({\n          key: \"partSelect\",\n          label: \"Part Select Tool\",\n          active: true,\n          enabled: true,\n          handlers: {\n            click: (ev) => {\n              const hits = ev.hitNodes;\n\n              const nodeId = hits && hits.length > 0 && hits[0].nodeId;\n              if (nodeId) {\n                const newNodeId = findClickable(nodeId);\n                const scopeNode =\n                  window.player.scene.get({ id: nodeId }).sceneId === newNodeId\n                    ? nodeId\n                    : newNodeId;\n                const selectable = window.player.scene.get({\n                  id: scopeNode,\n                  plug: \"Properties\",\n                  property: \"selectable\",\n                });\n                if (selectable || typeof selectable === \"undefined\") {\n                  window.player.selectionSet.set(scopeNode);\n                  const nodeInfo = window.player.scene.get({ id: scopeNode });\n                  setSelected([nodeInfo.id]);\n                  sendSelected([nodeInfo.id]);\n                } else {\n                  window.player.selectionSet.clear();\n                }\n              } else {\n                window.player.selectionSet.clear();\n              }\n            },\n          },\n        });\n      });\n  }, []);\n\n  return (\n    <div>\n      <div id=\"threekit-container\">\n        <div className=\"player-container\">\n          <div className=\"stage\" id=\"hand-container\">\n            <div id=\"hand-indicator\" className=\"hand bounce-2\">\n              <img\n                style={{ height: \"30px\", width: \"30px\" }}\n                src=\"https://solutions-engineering.s3.amazonaws.com/media/web-assets/hand.png\"\n              />\n            </div>\n          </div>\n          <div id={\"player-\" + props.assetId} className={props.mobile ? 'player-mobile' : 'player'}></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Player;\n","const config = {\n  authToken: \"f92c9619-01b0-4415-a04e-a21ceb953fef\",\n  swatches: {\n    exterior: [\n      {\n        src:\n          \"https://solutions-engineering.s3.amazonaws.com/quickdemo/honda/swatches/exterior/blue-metallic.png\",\n        config: \"Blue Metallic\",\n        title: \"Blue Metallic\",\n      },\n      {\n        src:\n          \"https://solutions-engineering.s3.amazonaws.com/quickdemo/honda/swatches/exterior/radiant-red-metallic.png\",\n        config: \"Red Metallic\",\n        title: \"Radiant Red Metallic\",\n      },\n      {\n        src:\n          \"https://solutions-engineering.s3.amazonaws.com/quickdemo/honda/swatches/exterior/crystal-black-pearl.png\",\n        config: \"Black Pearl\",\n        title: \"Crystal Black Pearl\",\n      },\n      {\n        src:\n          \"https://solutions-engineering.s3.amazonaws.com/quickdemo/honda/swatches/exterior/gray-pearl.png\",\n        config: \"Gray Pearl\",\n        title: \"Sonic Gray Pearl\",\n      },\n      {\n        src:\n          \"https://solutions-engineering.s3.amazonaws.com/quickdemo/honda/swatches/exterior/lunar-silver-metallic.png\",\n        config: \"Silver Metallic\",\n        title: \"Lunar Silver Metallic \",\n      },\n      {\n        src:\n          \"https://solutions-engineering.s3.amazonaws.com/quickdemo/honda/swatches/exterior/modern-steel-metallic.png\",\n        config: \"Steel Metallic\",\n        title: \"Modern Steel Metallic\",\n      },\n      {\n        src:\n          \"https://solutions-engineering.s3.amazonaws.com/quickdemo/honda/swatches/exterior/obsidian-blue-pearl.png\",\n        config: \"Blue Pearl\",\n        title: \"Obsidian Blue Pearl\",\n      },\n      {\n        src:\n          \"https://solutions-engineering.s3.amazonaws.com/quickdemo/honda/swatches/exterior/platinum-white-pearl.png\",\n        config: \"White Pearl\",\n        title: \"Platinum White Pearl\",\n      },\n    ],\n    wheels: [\n      {\n        src: \"#\",\n        config: \"Alloy\",\n        title: \"Alloy\",\n      },\n      {\n        src: \"#\",\n        config: \"Diamond\",\n        title: \"Diamond Cut\",\n      },\n      {\n        src: \"#\",\n        config: \"Black\",\n        title: \"Black Alloy\",\n      },\n    ],\n  },\n};\n\nexport default config;\n","import React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport config from \"../../config/\";\nimport Player from \"../Player\";\nimport {\n  BrowserView,\n  MobileView,\n  isBrowser,\n  isMobile,\n} from \"react-device-detect\";\n\nimport { Tree, Tabs, Select } from \"antd\";\n\nconst { DirectoryTree } = Tree;\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nfunction Form(props) {\n  useEffect(() => {});\n\n  // The car's make, model, year\n  let [make, setMake] = useState(false);\n  let [model, setModel] = useState(false);\n  let [carYear, setCarYear] = useState(false);\n\n  // Child menu items that are populated via player\n  let [menu, setMenu] = useState([]);\n  // Checks if there is an active player\n  let [active, setActive] = useState(false);\n  // Populated the part system parts with 'Loading...' until data comes in\n  let [menuLoading, setMenuLoading] = useState(true);\n  // The selected part\n  let [selected, setSelected] = useState(\"\");\n  // Check which system is expanded\n  let [expanded, setExpanded] = useState([\"01\", \"\"]);\n  // Loading menu\n  let loadingMenuObject = [\n    {\n      title: \"Loading...\",\n      key: \"01-menu-loading\",\n      isLeaf: true,\n    },\n  ];\n\n  // Handle select actions\n  const handleDropdown = (e, info) => {\n    console.log(e, info);\n    if (info.make || info.model || info.year) {\n      if (info.make == \"true\") {\n        setMake(true);\n      } else if (info.model == \"true\") {\n        setModel(true);\n      } else if (info.year == \"true\") {\n        setCarYear(true);\n        console.log(\"yaas year\")\n      }\n    }\n  };\n\n  // Get menu from loaded asset\n  const getPartsFromPlayer = (data) => {\n    // Replace menu loading data with real parts\n    setMenuLoading(false);\n    setMenu(data);\n    console.log(data);\n  };\n\n  // Get selected parts from the player\n  const getSelected = (data) => {\n    setSelected(data);\n  };\n\n  let menuData = [\n    {\n      title: \"Parts\",\n      key: \"01\",\n      children: [\n        {\n          title: \"Cooling System\",\n          key: \"da0d6c3f-64a2-491f-a7d9-c924d9698e88\",\n          children: menuLoading ? loadingMenuObject : menu,\n          isLeaf: false,\n        },\n        {\n          title: \"Exhaust\",\n          key: \"ef49b5c0-86b8-4c3d-965e-aaabd057707c\",\n          children: menuLoading ? loadingMenuObject : menu,\n          isLeaf: false,\n        },\n        // {\n        //   title: \"Transmission\",\n        //   key: \"fd1814b4-0215-436f-bf0a-fa81059bb43f\",\n        //   children: menuLoading ? loadingMenuObject : menu,\n        //   isLeaf: false,\n        // },\n      ],\n      isLeaf: false,\n    },\n  ];\n\n  const handleChange = (e, info) => {\n    // If the menu item selected is a leaf (system part), execute Threekit highlight, otherwise expand the menu\n    if (info.node.isLeaf) {\n      window.player.selectionSet.clear();\n      window.player.selectionSet.toggle(info.node.key);\n      setSelected([info.node.key]);\n      window.nodeId = info.node.key;\n    } else {\n      handleExpand(e, info);\n    }\n  };\n\n  const handleExpand = (e, info) => {\n    if (expanded == info.node.key) {\n      expanded.pop();\n    }\n    if (info.node.key == \"01\") {\n      return null;\n    }\n\n    if (active) {\n      console.log(\"handle-expand-is-active\");\n      // Testing\n      setExpanded([\"01\", info.node.key]);\n\n      let unloadPlayer = new Promise((resolve, reject) => {\n        let success = () => {\n          window.player.unload();\n          setActive(false);\n          setMenu([]);\n          setMenuLoading(true);\n          expanded.pop();\n        };\n\n        resolve(success());\n      });\n\n      unloadPlayer.then((successMessage) => {\n        setExpanded([\"01\", info.node.key]);\n        setActive(true);\n      });\n    } else if (!info.node.isLeaf) {\n      console.log(\"handle-expand-else-if\");\n\n      setExpanded([\"01\", info.node.key]);\n      setActive(true);\n    }\n    console.log({ expanded });\n  };\n\n  return (\n    <div>\n      {/* <p>{expanded}</p> */}\n      {/* <BrowserView> */}\n      <div className={isMobile ? \"mobile-form-container\" : \"form-container\"}>\n        <div className=\"form-dropdown\">\n          <Select\n            style={{ width: 120 }}\n            placeholder=\"Make\"\n            onChange={handleDropdown}\n          >\n            <Option value=\"make\" key={\"123456\"} make={\"true\"}>\n              3Kit\n            </Option>\n          </Select>\n        </div>\n        {make ? (\n          <div className=\"form-dropdown\">\n            <Select\n              style={{ width: 120 }}\n              placeholder=\"Model\"\n              onChange={handleDropdown}\n            >\n              <Option value=\"model\" model={\"true\"}>\n                Viz\n              </Option>\n            </Select>\n          </div>\n        ) : (\n          <p></p>\n        )}\n        {model ? (\n          <div className=\"form-dropdown\">\n            <Select\n              style={{ width: 120 }}\n              placeholder=\"Year\"\n              onChange={handleDropdown}\n            >\n              <Option value=\"2018\" key={\"2018\"} year={\"true\"}>\n                2018\n              </Option>\n              <Option value=\"2019\" key={\"2019\"} year={\"true\"}>\n                2019\n              </Option>\n              <Option value=\"2020\" key={\"2020\"} year={\"true\"}>\n                2020\n              </Option>\n            </Select>\n          </div>\n        ) : (\n          <div></div>\n        )}\n        {carYear ? (\n          <DirectoryTree\n            className=\"draggable-tree\"\n            onSelect={handleChange}\n            defaultExpandedKeys={[\"01\"]}\n            onExpand={handleExpand}\n            expandedKeys={expanded}\n            selectedKeys={selected}\n            // height={'50%'}\n            treeData={menuData}\n          />\n        ) : (\n          <div></div>\n        )}\n      </div>\n      <p>{carYear}</p>\n\n      {active ? (\n        <Player\n          authToken={config.authToken}\n          stageId={\"\"}\n          assetId={expanded[1]}\n          initialConfig={{}}\n          showConfigurator={false}\n          showAR={false}\n          parentCallback={getPartsFromPlayer}\n          getSelected={getSelected}\n          mobile={false}\n        />\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n}\n\nexport default Form;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  BrowserView,\n  MobileView,\n  isBrowser,\n  isMobile,\n} from \"react-device-detect\";\nimport { PageHeader } from \"antd\";\nimport \"./style.css\"\n\nfunction Header(props) {\n  useEffect(() => {});\n\n  return (\n    <div>\n      <PageHeader\n        className=\"site-page-header\"\n        className=\"site-page-header\"\n        title=\"3K Auto Parts\"\n        subTitle=\"Select a make, model, and year to get started\"\n      />\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { useEffect } from \"react\";\n\n// import \"antd/dist/antd.css\";\n\n// Less\n// import 'antd/lib/style/themes/default.less';\n// import 'antd/dist/antd.less'; // Import Ant Design styles by less entry\nimport \"antd/dist/antd.less\";\nimport \"./theme.less\"; // variables to override above\nimport ReactGA from \"react-ga\";\n\n// Components\nimport Player from \"./components/Player\";\nimport Form from \"./components/Form\";\nimport Header from \"./components/Header\";\n\n\n// Config\nimport config from \"./config/index\";\n\nfunction App() {\n  // useEffect(() => {\n  //   ReactGA.initialize(\"UA-63905846-9\");\n  //   ReactGA.set({ dimension1: \"Auto Parts Demo\" });\n  //   ReactGA.pageview(\"Auto-Parts Selector Demo\");\n  // });\n  return (\n    <div>\n      <Header/>\n     <Form />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}